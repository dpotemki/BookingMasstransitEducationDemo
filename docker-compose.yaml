version: '3.8'

services:
  database:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: BookingOrderOrchestratorDb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status"]
      interval: 10s
      timeout: 5s
      retries: 5

  booking_orchestrator_service:
    image: booking_orchestrator_service:latest
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure

  flyght_service:
    image: flyght_service:latest
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure

  hotel_service:
    image: hotel_service:latest
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure

  transfer_service:
    image: transfer_service:latest
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure

  uiapi_service:
    image: uiapi_service:latest
    ports:
      - "8085:8085"
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure

volumes:
  postgres_data:
